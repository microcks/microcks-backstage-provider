name: release
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to release'
        required: true
      version:
        description: 'Release version'
        required: true
      nextVersion:
        description: 'Next version after release (-SNAPSHOT will be added automatically)'
        required: true
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      deployments: write
      id-token: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ssh-key: ${{ secrets.RELEASE_DEPLOY_KEY }}
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch }}

      - name: Set Node.js 20.x
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Set release version
        run: |
          yarn install
          npm version ${{ github.event.inputs.version }} --git-tag-version=false

      - name: Commit, push and tag changes
        run: |
          git config user.name "microcks-bot"
          git config user.email "info@microcks.io"
          git commit -m "Releasing version ${{ github.event.inputs.version }}" .
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

      - name: Publish package with NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Generate SBOM but only consider package-lock.json file to avoid noise from yarn files
          npm sbom --package-lock-only --sbom-format spdx > microcks-microcks-backstage-provider-${{ github.event.inputs.version }}.spdx-sbom.json 
          yarn tsc
          yarn export-dynamic
          yarn run build
          npm publish --provenance
          npm pack

      - name: Publish release with JReleaser
        uses: jreleaser/release-action@f69e545b05f149483cecb2fb81866247992694b8 # v 2.4.2
        env:
          JRELEASER_PROJECT_VERSION: ${{ github.event.inputs.version }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Persist logs
      - name: JReleaser release output
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v 4.6.2
        with:
          name: jreleaser-release
          path: |
            target/jreleaser/trace.log
            target/jreleaser/output.properties

      - name: Set next iteration version
        run: npm version ${{ github.event.inputs.nextVersion }}-SNAPSHOT --git-tag-version=false

      - name: Commit, push and tag changes
        run: |
          git commit -m "Setting SNAPSHOT version ${{ github.event.inputs.nextVersion }}-SNAPSHOT" .
          git push origin ${{ github.event.inputs.branch }}
